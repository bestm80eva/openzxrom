Project status: OpenZXRom 2008-01-07

User entry points
-----------------
These are addresses which it is anticipated that user programs will attempt to
call; we therefore attempt to match the documented behaviour of the equivalent
routines in the ZX ROM.

0x0000: Startup

0x0008: Error display
	Only a limited number of error messages are available.

0x0010: Print a character
	Character classes supported: Comma control (0x06), Newline (0x0d), INK/PAPER
	controls, FLASH / BRIGHT controls, AT and TAB controls, standard characters
	(0x20-0x7f; includes customised fonts), user-defined graphics.
	Not supported: cursor / backspace controls, INVERSE / OVER controls, block
	graphics, keyword tokens.
	Does not handle scrolling upon reaching the bottom of the screen.

0x0028: Calculator mode
	Calculator opcodes supported: 0x2b (PEEK), 0x2c (IN), 0x2d (USR num)

0x0038: IM1 interrupt service routine
	Updates FRAMES and LAST_KEY system variables.

0x028e: Keyboard scanning

0x031e: Test for valid keypress

0x0333: Decode keypress to ASCII code
  Does not account for K/E/G cursor modes; only L and C (with and without
  shifts).

0x0556: Load bytes from tape
	LOAD only, no VERIFY. Other addresses synchronised with ZX ROM behaviour are
	0x0565 (entry point as trapped by FUSE for tape flash-loading), 0x05e2 (return
	address from FUSE flash-loading) and 0x053f (restore border and exit).
	
0x0d6b: Clear screen
	0x0daf is another valid entry point.
	
0x1601: Open stream
	Often used to ensure that RST 0x0010 output is directed to the upper screen;
	this is currently the only supported output mode, so this routine is a no-op.

0x203c: Print a string

0x229b: Set border colour to A

0x22aa: Translate coordinates to screen address

0x22e5: Plot a pixel
	Does not account for attributes or INVERSE / OVER state

0x2ab6: PUSH contents of AEDCB to calculator stack

0x2bf1: POP value from calculator stack into AEDCB

0x2d28: PUSH contents of A to calculator stack

0x2d2b: PUSH contents of BC to calculator stack

0x2da2: POP value from calculator stack into BC

0x2dd5: POP value from calculator stack into A

BASIC commands supported
------------------------
	INK
	PAPER
	FLASH
	BRIGHT
	OUT
	STOP
	NEW
	BORDER
	REM
	GO TO
	LOAD (except DATA)
	PAUSE
	POKE
	PRINT (except numeric expressions, OVER, INVERSE and #n)
	PLOT
	RUN
	RANDOMIZE
	CLS
	CLEAR
BASIC commands not supported:
	DEF FN, CAT, FORMAT, MOVE, ERASE, OPEN #, CLOSE #, MERGE, VERIFY, BEEP, CIRCLE,
	INVERSE, OVER, LPRINT, LLIST, READ, DATA, RESTORE, CONTINUE, DIM, FOR, GO SUB,
	INPUT, LIST, LET, NEXT, SAVE, IF, DRAW, RETURN, COPY
	
Expression support
------------------
	Numeric literals - supported
	String literals - supported
	Bracketed expressions - supported
	Variables - not supported
	Array subscripts - not supported
	Operators:
		Boolean (OR , AND , NOT) - parsed but not evaluated
		Numeric comparison ( = , < , > , <> , <= , >= ) - parsed but not evaluated
		String comparison ( = , < , > , <> , <= , >= ) - parsed but not evaluated
		String concatenation (+) - parsed but not evaluated
		Arithmetic ( + , - , * , / , ^ ) - unary '+' trivially skipped over, others
			parsed but not evaluated
		Functions:
			IN, PEEK, USR (numeric)
		  Others parsed but not evaluated (arguments not parsed)

Known bugs
----------
INK 9 (and PAPER 9) currently works by selecting either black or white based on
the current paper colour, and then behaving identically to INK 0 / INK 7
respectively. However, the original ROM appears to set a flag to permanently
record the 'contrasting INK' mode: thus PAPER 2: INK 9: PAPER 6 will result in
black ink on yellow paper on the original ROM, but white ink on yellow on
OpenZXRom.
